services:
  api:
    container_name: "api"
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file: ./.env
    restart: no
    healthcheck:
      test: [ "CMD-SHELL", "curl -i http://api:3002/api/v1/health/full-health || { echo 'Health check failed with code $?'; exit 1; }" ]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - 3002:3002
    volumes:
      - .:/app
      - .:/assets:/app/assets
      - .:/public:/app/public
      - .:/var/log:/app/var/log
      - .:/var/assets:/app/var/assets
    depends_on:
      db:
        condition: service_healthy
      pgbouncer:
        condition: service_healthy
  db:
    image: "postgres"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app" ]
      interval: 5s
      timeout: 5s
      retries: 5
    #    build:
    #      dockerfile: ./pgx_ulid/Dockerfile
    container_name: "db"
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
    ports:
      - "54333:5432"
  pgbouncer:
    env_file: ./.env
    container_name: pgbouncer
    ### build from source
    image: bitnami/pgbouncer
      # args:
      #   VERSION: 1.23.0
    ### download from dockerhub
    # image: edoburu/pgbouncer:latest
    environment:
      - PGBOUNCER_USER=${DATABASE_USER}
      - PGBOUNCER_PASSWORD=${DATABASE_PASSWORD}
      - PGBOUNCER_DATABASE=${DATABASE_NAME}

      - POSTGRESQL_USERNAME=${DATABASE_USER}
      - POSTGRESQL_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRESQL_DATABASE=${DATABASE_NAME}
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_HOST=db
      # - DB_NAME=test
      - AUTH_TYPE=md5 # remove/comment this line if using postgres:13 and lower
      - PGBOUNCER_POOL_MODE=session
      - PGBOUNCER_INIT_MAX_RETRIES=5
      - PGBOUNCER_MAX_CLIENT_CONN=10000
      - PGBOUNCER_MAX_DB_CONNECTIONS=100
      - PGBOUNCER_DEFAULT_POOL_SIZE=100
      - PGBOUNCER_SERVER_ROUND_ROBIN=1
      - PGBOUNCER_SERVER_IDLE_TIMEOUT=300
      - PGBOUNCER_CLIENT_IDLE_TIMEOUT=300
      - PGBOUNCER_QUERY_TIMEOUT=600
      - PGBOUNCER_MAX_PREPARED_STATEMENTS=0
    ports:
      - "6432:6432"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=${DATABASE_PASSWORD} psql -h localhost -p 6432 -U ${DATABASE_USER} ${DATABASE_NAME} -c 'SELECT 1' > /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 10
#    volumes:
#      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
volumes:
  app:
